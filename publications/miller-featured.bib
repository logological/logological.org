@article{miller2020dmitri,
  author       = {Tristan Miller},
  title	       = {{Dmitri Borgmann's} Rotas Square Articles},
  year	       = 2020,
  volume       = 67,
  number       = 3,
  month	       = sep,
  pages	       = {431--432},
  issn	       = {0029-3970},
  doi	       = {10.1093/notesj/gjaa113},
  html	       = {https://academic.oup.com/nq/article/67/3/431/5900366?guestAccessKey=570b28c9-eed4-45ca-87ac-1e2650a8d5ae},
  journal      = {Notes and Queries},
  bookurl      = {https://academic.oup.com/nq},
  abstract     = {In 1979 and 1980, Word Ways: The Journal of Recreational Linguistics printed a series of articles on the early history, religious symbolism, and cultural significance of the rotas square, an ancient Latin-language palindromic word square.  The articles were attributed to Dmitri A. Borgmann, the noted American writer on wordplay and former editor of Word Ways.  While they attracted little attention at the time, some 35 years after their publication (and 29 years after Borgmann's death), questions began to be raised about their authorship.  There is much internal and external evidence that, taken together, compellingly supports the notion that Borgmann did not write the articles himself.  This paper surveys this evidence and solicits help in identifying the articles' original source.},
}

@article{miller2020gpp,
  author       = {Tristan Miller and Denis Auroux},
  title	       = {{GPP}, the Generic Preprocessor},
  year	       = 2020,
  volume       = 5,
  number       = 51,
  month	       = jul,
  issn	       = {2475-9066},
  doi	       = {10.21105/joss.02400},
  code	       = {https://logological.org/gpp/},
  journal      = {Journal of Open Source Software},
  pdf	       = {https://www.theoj.org/joss-papers/joss.02400/10.21105.joss.02400.pdf},
  bookurl      = {https://joss.theoj.org/},
  abstract     = {In computer science, a preprocessor (or macro processor) is a tool that programatically alters its input, typically on the basis of inline annotations, to produce data that serves as input for another program.  Preprocessors are used in software development and document processing workflows to translate or extend programming or markup languages, as well as for conditional or pattern-based generation of source code and text.  Early preprocessors were relatively simple string replacement tools that were tied to specific programming languages and application domains, and while these have since given rise to more powerful, general-purpose tools, these often require the user to learn and use complex macro languages with their own syntactic conventions.  In this paper, we present GPP, an extensible, general-purpose preprocessor whose principal advantage is that its syntax and behaviour can be customized to suit any given preprocessing task.  This makes GPP of particular benefit to research applications, where it can be easily adapted for use with novel markup, programming, and control languages.},
}

@article{miller2020predicting,
  author       = {Tristan Miller and Do Dinh, Erik-L{\^{a}}n and Edwin Simpson and Iryna Gurevych},
  title	       = {Predicting the Humorousness of Tweets Using {Gaussian} Process Preference Learning},
  year	       = 2020,
  volume       = 64,
  month	       = mar,
  pages	       = {37--44},
  issn	       = {1135-5948},
  doi	       = {10.26342/2020-64-4},
  abstract     = {Most humour processing systems to date make at best discrete, coarse-grained distinctions between the comical and the conventional, yet such notions are better conceptualized as a broad spectrum.  In this paper, we present a probabilistic approach, a variant of Gaussian process preference learning (GPPL), that learns to rank and rate the humorousness of short texts by exploiting human preference judgments and automatically sourced linguistic annotations.  We apply our system, which is similar to one that had previously shown good performance on English-language one-liners annotated with pairwise humorousness annotations, to the Spanish-language data set of the HAHA@IberLEF2019 evaluation campaign.  We report system performance for the campaign's two subtasks, humour detection and funniness score prediction, and discuss some issues arising from the conversion between the numeric scores used in the HAHA@IberLEF2019 data and the pairwise judgment annotations required for our method.},
  journal      = {Procesamiento del Lenguaje Natural},
  pdf	       = {http://journal.sepln.org/sepln/ojs/ojs/index.php/pln/article/download/6193/3644},
  bookurl      = {http://journal.sepln.org/sepln/ojs/ojs/index.php/pln},
  code         = {https://github.com/UKPLab/haha2019-gppl},
  data         = {https://github.com/UKPLab/haha2019-gppl},
}

@article{miller2020reinhold,
  author       = {Tristan Miller},
  title	       = {Reinhold {Aman}, 1936--2019},
  year	       = 2020,
  volume       = 32,
  number       = 1,
  month	       = feb,
  pages	       = {1--5},
  issn	       = {0933-1719},
  doi	       = {10.1515/humor-2019-0085},
  journal      = {Humor: International Journal of Humor Research},
  bookurl      = {https://www.degruyter.com/view/j/humr},
  pdf	       = {https://www.degruyter.com/view/j/humr.2020.33.issue-1/humor-2019-0085/humor-2019-0085.xml},
}

@inproceedings{simpson2019predicting,
  author       = {Edwin Simpson and Do Dinh, Erik-L{\^{a}}n and Tristan Miller and Iryna Gurevych},
  title	       = {Predicting Humorousness and Metaphor Novelty with {Gaussian} Process Preference Learning},
  year	       = 2019,
  booktitle    = {Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics (ACL 2019)},
  month	       = jul,
  isbn	       = {978-1-950737-48-2},
  pages	       = {5716--5728},
  doi	       = {10.18653/v1/P19-1572},
  pdf	       = {https://www.aclweb.org/anthology/P19-1572},
  bookurl      = {http://www.acl2019.org/},
  abstract     = {The inability to quantify key aspects of creative language is a frequent obstacle to natural language understanding.  To address this, we introduce novel tasks for evaluating the creativeness of language---namely, scoring and ranking text by humorousness and metaphor novelty.  To sidestep the difficulty of assigning discrete labels or numeric scores, we learn from pairwise comparisons between texts.  We introduce a Bayesian approach for predicting humorousness and metaphor novelty using Gaussian process preference learning~(GPPL), which achieves a Spearman's~$\rho$ of 0.56 against gold using word embeddings and linguistic features. Our experiments show that given sparse, crowdsourced annotation data, ranking using GPPL outperforms best--worst scaling. We release a new dataset for evaluating humor containing 28,210 pairwise comparisons of 4,030 texts, and make our software freely available.},
  code	       = {https://github.com/UKPLab/acl2019-GPPL-humour-metaphor},
  data	       = {https://github.com/UKPLab/acl2019-GPPL-humour-metaphor},
}

@inproceedings{uma2021semeval,
  author       = {Alexandra Uma and Tommaso Fornaciari and Anca Dumitrache and Tristan Miller and Jon Chamberlain and Barbara Plank and Edwin Simpson and Massimo Poesio},
  title	       = {{SemEval}-2021 {Task}~12: Learning with Disagreements},
  year	       = 2021,
  booktitle    = {Proceedings of the 15th International Workshop on Semantic Evaluation (SemEval-2021)},
  note	       = {To appear},
  month	       = aug,
  bookurl      = {https://semeval.github.io/SemEval2021/},
  abstract     = {Disagreement between coders is ubiquitous in virtually all datasets annotated with human judgements in both natural language processing and computer vision.  However, most supervised machine learning methods assume that a single preferred interpretation exists for each item, which is at best an idealization.  The aim of the SemEval-2021 shared task on Learning with Disagreements (Le-wi-Di) was to provide a unified testing framework for methods for learning from data containing multiple and possibly contradictory annotations covering the best-known datasets containing information about disagreements for interpreting language and classifying images. In this paper we describe the shared task and its results.},
  data	       = {https://competitions.codalab.org/competitions/25748},
}

@incollection{kolb2022human,
  author       = {Waltraud Kolb and Tristan Miller},
  title	       = {Human--Computer Interaction in Pun Translation},
  year	       = 2022,
  booktitle    = {Using Technologies for Creative-Text Translation},
  editor       = {James Hadley and Kristiina Taivalkoski-Shilov and Carlos S. C. Teixeira and Antonio Toral},
  note	       = {To appear},
  publisher    = {Routledge},
  abstract     = {We present and evaluate PunCAT, an interactive electronic tool for the translation of puns.  Following the strategies known to be applied in pun translation, PunCAT automatically translates each sense of the pun separately; it then allows the user to explore the semantic fields of these translations in order to help construct a plausible target-language solution that maximizes the semantic correspondence to the original. Our evaluation is based on an empirical pilot study in which the participants translated puns from a variety of published sources from English into German, with and without PunCAT. We aimed to answer the following questions: Does the tool support, improve, or constrain the translation process, and if so, in what ways? And what are the tool's main benefits and drawbacks as perceived and described by the participants? Our analysis of the translators' cognitive processes gives us insight into their decision-making strategies and how they interacted with the tool.  We find clear evidence that PunCAT effectively supports the translation process in terms of stimulating brainstorming and broadening the translator's pool of solution candidates.  We have also identified a number of directions in which the tool could be adapted to better suit translators' work processes.},
}
